generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Booking {
  id         Int      @id @default(autoincrement())
  userId     Int
  scheduleId Int
  seatNumber String
  createdAt  DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id])
  schedule Schedule @relation(fields: [scheduleId], references: [id])

  @@unique([scheduleId, seatNumber])
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  reservations Reservation[]
  bookings     Booking[]
}

model Schedule {
  id           Int           @id @default(autoincrement())
  movieId      Int
  movie        Movie         @relation(fields: [movieId], references: [id])
  date         DateTime
  capacity     Int
  reservations Reservation[]
  seats        Seat[]
  bookings     Booking[]
}

model Movie {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  posterUrl   String
  genre       String
  schedules   Schedule[]
}

model Seat {
  id            Int          @id @default(autoincrement())
  scheduleId    Int
  number        String
  isReserved    Boolean      @default(false)
  schedule      Schedule     @relation(fields: [scheduleId], references: [id])
  reservation   Reservation? @relation(fields: [reservationId], references: [id])
  reservationId Int?
}

model Reservation {
  id         Int      @id @default(autoincrement())
  userId     Int
  scheduleId Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  seats      Seat[]
}

enum Role {
  ADMIN
  USER
}
